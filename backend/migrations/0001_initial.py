# Generated by Django 4.2.1 on 2023-05-05 17:31

from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth_backend", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, verbose_name="name of the category"
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "categoriesâ€¹",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dt", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("basket", "Basket status"),
                            ("new", "New"),
                            ("confirmed", "Confirmed"),
                            ("assembled", "Assembled"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("canceled", "Canceled"),
                        ],
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Contact",
                        to="auth_backend.contact",
                        verbose_name="Contact",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Order list",
                "ordering": ("-dt",),
            },
        ),
        migrations.CreateModel(
            name="Parameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, verbose_name="Parameter name"),
                ),
            ],
            options={
                "verbose_name": "Parameter name",
                "verbose_name_plural": "List of parameter names",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Product name")),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="backend.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="ProductInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=100, verbose_name="Model")),
                ("quantity", models.PositiveIntegerField(verbose_name="Quantity")),
                ("price", models.PositiveIntegerField(verbose_name="Price")),
                (
                    "price_rrc",
                    models.PositiveIntegerField(
                        verbose_name="Recommended retail price"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_infos",
                        to="backend.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product information",
                "verbose_name_plural": "Product information list",
            },
        ),
        migrations.CreateModel(
            name="Shop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Shop Name")),
                (
                    "url",
                    models.URLField(blank=True, null=True, verbose_name="Shops site"),
                ),
                (
                    "file_name",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=django.core.files.storage.FileSystemStorage(),
                        upload_to="",
                        verbose_name="",
                    ),
                ),
                (
                    "state",
                    models.BooleanField(
                        default=True, verbose_name="Status of orders receiving  "
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shop",
                "verbose_name_plural": "Shops",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="ProductParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=100, verbose_name="Value")),
                (
                    "parameter",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_parameters",
                        to="backend.parameter",
                        verbose_name="Parameter",
                    ),
                ),
                (
                    "product_info",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_parameters",
                        to="backend.productinfo",
                        verbose_name="Product Information",
                    ),
                ),
            ],
            options={
                "verbose_name": "Parameter",
                "verbose_name_plural": "List of parameter names",
            },
        ),
        migrations.AddField(
            model_name="productinfo",
            name="shop",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_infos",
                to="backend.shop",
                verbose_name="Shop",
            ),
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(default=1, verbose_name="Quantity"),
                ),
                ("price", models.PositiveIntegerField(default=0, verbose_name="Price")),
                (
                    "total_amount",
                    models.PositiveIntegerField(default=0, verbose_name="Total Amount"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ordered_items",
                        to="backend.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "product_info",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ordered_items",
                        to="backend.productinfo",
                        verbose_name="Product Information",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item ordered",
                "verbose_name_plural": "List of ordered items",
            },
        ),
        migrations.AddField(
            model_name="category",
            name="shops",
            field=models.ManyToManyField(
                blank=True,
                related_name="categories",
                to="backend.shop",
                verbose_name="Shops",
            ),
        ),
        migrations.AddConstraint(
            model_name="productparameter",
            constraint=models.UniqueConstraint(
                fields=("product_info", "parameter"), name="unique_product_parameter"
            ),
        ),
        migrations.AddConstraint(
            model_name="productinfo",
            constraint=models.UniqueConstraint(
                fields=("product", "shop"), name="unique_product_info"
            ),
        ),
        migrations.AddConstraint(
            model_name="orderitem",
            constraint=models.UniqueConstraint(
                fields=("order_id", "product_info"), name="unique_order_item"
            ),
        ),
    ]
